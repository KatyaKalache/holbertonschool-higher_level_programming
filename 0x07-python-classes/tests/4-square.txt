>>> Square = __import__('4-square').Square

# input str
>>> my_square = Square("betty")
Traceback (most recent call last):
	  ...
TypeError: size must be an integer

# input None
>>> my_square = Square(None)
Traceback (most recent call last):
          ...
TypeError: size must be an integer

# input negative
>>> my_square = Square(-1)
Traceback (most recent call last):
          ...
ValueError: size must be >= 0

# input nothing
>>> my_square = Square()
>>> print("Area: {} for size: {}".format(my_square.area(), my_square.size))
Area: 0 for size: 0

# input booleans
>>> my_square = Square(True)
Traceback (most recent call last):
	  ...
TypeError: size must be an integer

# input booleans
>>> my_square = Square(False)
Traceback (most recent call last):
          ...
TypeError: size must be an integer

# input float
>>> my_square = Square(2.3)
Traceback (most recent call last):
          ...
TypeError: size must be an integer

# input float('inf')
>>> my_square = Square(float('inf'))
Traceback (most recent call last):
          ...
TypeError: size must be an integer

# input large number(23459605465096059709565456)
>>> my_square = Square(23459605465096059709565456)
>>> print("Area: {} for size: {}".format(my_square.area(), my_square.size))
Area: 550353088577964911999985396173435879758944348487936 for size: 23459605465096059709565456

